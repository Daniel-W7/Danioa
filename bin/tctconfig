#!/bin/bash
#
#Name:tctconfig
#Version:2.6.3
#Auther：Daniel
#Date&Time：2022年1月6日
#Discription：实现通过脚本自动备份，重启，更新tomcat系统
#定义Tomcat的安装目录，需要根据自己的部署位置调整
#配置多线程处理，避免因为脚本的退出导致tomcat自动退出的情况
set -m
#获取运行的程序名
#PRONAME=`basename $0`
#获取文件运行的当前目录
#BINPATH=$(cd "$(dirname "$0")"; pwd)

VERSION=2.6.3

#INSTALL_OPTION=software配置tctconfig为software模式或者是script模式;
#如果INSTALL_OPTION=software配置为script模式，则设置tct.conf的路径为$HOME/tctconfig/conf/tct.conf,更新补丁及备份补丁路径为$HOME/tctconfig,日志路径为$HOME/tctconfig/logs
#注释掉INSTALL_OPTION=software或者是配置其他值，则设置tct.conf的路径为/etc/tct.conf,更新补丁及备份补丁路径为$HOME/tctconfig，日志路径为/usr/local/logs,
#根据程序是software模式还是script模式来判断配置文件及日志文件的的路径
#默认通过run文件install.sh脚本配置，也可自行配置
INSTALL_OPTION=script

if [ $INSTALL_OPTION == script ];then
	CONF_FILE=$HOME/tctconfig/conf/tct.conf
	TCT_PATH=$HOME/tctconfig
	PACKAGE_PATH=$HOME/tctconfig
else
	CONF_FILE=/etc/tct.conf
	TCT_PATH=/usr/local/tctconfig
	PACKAGE_PATH=$HOME/tctconfig
fi
#TCT_PATH=`cat $CONF_FILE | grep ^TCT_PATH | awk -F'=' '{ print $2 }'`
#PACKAGE_PATH=`cat $CONF_FILE | grep ^PACKAGE_PATH | awk -F'=' '{ print $2 }'`
#PACKAGE_PATH="$HOME/tctconfig"
#定义程序的运行模式，单用户模式或者多用户模式
PROGRAM_MODE=`cat $CONF_FILE | grep ^PROGRAM_MODE | awk -F'=' '{ print $2 }'`

#配置选项，如果没有输入选项直接进入提示页面
#CONFIG_MODE为配置方式，可以选提示方式（COMMON），或者直接输入完整命令方式（PRO）
case $1 in
	-b|--backup)
		CONFIGURATION=b
		CONFIG_MODE=PRO;;
	-tb|--testbackup)
		CONFIGURATION=tb
		CONFIG_MODE=PRO;;
	-r|--restart)
		CONFIGURATION=r
		CONFIG_MODE=PRO;;
	-u|--update)
		CONFIGURATION=u
		CONFIG_MODE=PRO;;
	-tu|--testupdate)
                CONFIGURATION=tu
		CONFIG_MODE=PRO;;
	-tg|--tgupdate)
		CONFIGURATION=tg
		CONFIG_MODE=COMMON;;
	-gt|--gtupdate)
        CONFIGURATION=gt
        CONFIG_MODE=COMMON;;
	-qxbs|--qxbsupdate)
        CONFIGURATION=qxbs
        CONFIG_MODE=COMMON;;
	-sh|--shutdown)
		CONFIGURATION=sh
		CONFIG_MODE=PRO;;
	-st|--startup)
		CONFIGURATION=st
		CONFIG_MODE=PRO;;
	-l|--log)
		CONFIGURATION=l
		CONFIG_MODE=PRO
		if [ $PROGRAM_MODE == multi ];then
			COUNT=$3
		else
			COUNT=$2
		fi;;
	-rd|--redis)
		CONFIGURATION=rd
		REDIS_ACTION=$2
		CONFIG_MODE=PRO;;
	-i|--install)
		CONFIGURATION=i
		echo "Hello,please choose your path to install:"
                read -p "The PATH to install:(default:/opt):" INSTALLPATH
		if [ $INSTALLPATH -n ];then
			INSTALLPATH=/opt;
		fi
		read -p "The option to install:(full|redis|tomcat|jdk,default:full):" INSTALLOPTION
		if [ $INSTALLOPTION -n ];then
			INSTALLOPTION=full;
		fi;;
	-c|--clean)
		CONFIGURATION=c
		CLEAN_OPTION=$2;;
	-v|--version)
		echo -e "\033[33mThe tctconfig version is $VERSION\033[0m"
		echo -e "\033[32mThe program path is $TCT_PATH\033[0m"
		echo -e "\033[34mThe conf file is $CONF_FILE\033[0m"
		echo -e "\033[35mThe PACKAGE_PATH is $PACKAGE_PATH\033[0m"
		exit 0;;
	-h|--help)
	echo -e "Usage:tctconf.sh [-option] [TOMCATVERSION] [COUNT] [CLEAN_OPTION]\n  Options:\n  -b|--backup|-tb|--testbackup|-r|--restart|-u|--update|-tu|--testupdate\n  -tg|--tgupdate|-sh|--shutdown|-st|--startup|-l|--log\n  -i|--install|-c|--clean|-h|--help|-v|--version]\n"
		exit 0;;
	*)
		CONFIG_MODE=COMMON
 		if [ $PROGRAM_MODE == multi ];then
			echo "Hello,please choose your tomcat to configure(ht|gfzq|waibao|tuoguan|zx|hx|xcgf|dsq|zs|zyjj|df|qhyxh|vm):"
			echo "Your choice(ht|gfzq|waibao|tuoguan|zx|hx|xcgf|dsq|zs|zyjj|df|qhyxh|vm):"
			read -p "Your choice:" TOMCATVERSION
		fi
		echo "Please chose your configuration:(b|backup|r|restart|u|update|l|log|c|clean|q for quit):"
		read -p "Your configuration:" CONFIGURATION
		if [ -z $CONFIGURATION ];then
			tctconfig -h
			exit 1;
		fi
		if [ QUIT_$CONFIGURATION = QUIT_q ];then
			echo "exiting...";
			exit 0;
		fi
esac

#备份对应系统
backup() {
        cd $TOMCATPATH/webapps/
	echo -e "\033[33mStart to backup $TOMCATPATH/webapps/$ROOTPATH\033[0m\nThe back file is $TOMCATPATH/webapps/$ROOTPATH`date +%Y-%m-%d-%H:%M`.zip" 2>&1| tee -a  $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
        zip -r $ROOTPATH`date +%Y-%m-%d-%H:%M`.zip $ROOTPATH >>$TCT_PATH/logs/$TOMCATVERSION-backup-`date +%Y-%m-%d`.log
	echo -e "\033[32m$TOMCATPATH/webapps/$ROOTPATH backup successfully.\033[0m" 2>&1|tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log

}

#测试之前的完整备份
testbackup() {
        cd $TOMCATPATH/webapps/
	echo -e "\033[33mStart to backup $TOMCATPATH/webapps/$ROOTPATH before test...\033[0m\nThe back file is $TOMCATPATH/webapps/$ROOTPATH`date +%Y-%m-%d-%H:%M`TB.zip" 2>&1 | tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
        zip -r $ROOTPATH`date +%Y-%m-%d-%H:%M`TB.zip $ROOTPATH >> $TCT_PATH/logs/$TOMCATVERSION-backup-`date +%Y-%m-%d`.log
	echo -e "\033[32m$TOMCATPATH/webapps/$ROOTPATH backup before test successfully.\033[0m" 2>&1 | tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
}
#关闭对应tomcat
tctshut(){
    #关闭对应的tomcat
	echo -e "\033[36mStart to shut $TOMCATPATH/webapps/$ROOTPATH\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	cd $TOMCATPATH
	$TOMCATPATH/bin/shutdown.sh &>/dev/null
        sleep 3
	ps -ef | grep $TOMCATPATH | grep -v grep | awk '{print $2}' | sed -e "s/^/kill -9 /g" | sh -
	echo -e "\033[33m$TOMCATPATH/webapps/$ROOTPATH is shutted successfully\033[0m" 2>&1|tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	sleep 1
}
#开启对应tomcat
tctstart(){
 	#启动tomcat,并查看对应日志
	echo -e "\033[32mStarting $TOMCATPATH/webapps/$ROOTPATH ...\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	cd $TOMCATPATH
	$TOMCATPATH/bin/startup.sh >>$TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	#echo -e "\033[31m$TOMCATPATH/webapps/$ROOTPATH start successfully\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
        tail -f $TOMCATPATH/logs/catalina.out
}
tctrestart(){
	tctshut
	tctstart
}
#检查TOMCATVERSION是否合法,并获取对应配置文件
TOMCAT_GET(){
	#定义MULTI_COUNT初始化值为0，用于判断参数是否为MULTI_NAME
	MULTI_COUNT=0
	#判断是否正确输入了参数
	if [ -z $TOMCATVERSION ];then
		echo "error,Please choose a system to configure";
		exit 7;
	#判断输入的TOMCATVERSION，是否为MULTI_name里的值，如果是的话进行多个更新，不是就正常获取tomcat路径
	elif [ -n "`cat $CONF_FILE | grep ^MULTI | cut -d : -f 1 | grep $TOMCATVERSION`" ];then
		MULTI_NAME=$TOMCATVERSION
		MULTI_COUNT=`cat $CONF_FILE | grep ^MULTI | grep $MULTI_NAME | cut -d : -f 2 | awk '{print NF}'`
		I=1
		while [ $I -le $MULTI_COUNT ];do
			TOMCATVERSION=`cat $CONF_FILE | grep ^MULTI | grep $MULTI_NAME | cut -d : -f 2 | awk -F ' ' '{ print $'$I'}'`	
			TOMCATPATH=`cat $CONF_FILE | grep ^$TOMCATVERSION | awk -F':' '{ print $2 }'`
	               	ROOTPATH=`cat $CONF_FILE | grep ^$TOMCATVERSION | awk -F':' '{ print $3 }'`
			TOMCAT_CONFIGURE		
			let I++
		done;
		exit 0;
	else
        	if [ `cat $CONF_FILE | grep ^$TOMCATVERSION | wc -l` -gt 1 ];then
               		echo "The $TOMCATVERSION is more than one in tct.conf,Please check it";
               		exit 8;
        	elif [ `cat $CONF_FILE | grep ^$TOMCATVERSION | wc -l` -lt 1 ];then
               		echo "The $TOMCATVERSION is not exist in tct.conf,Please check it";
               		exit 9;
       		fi
		TOMCATPATH=`cat $CONF_FILE | grep ^$TOMCATVERSION | awk -F':' '{ print $2 }'`;
		ROOTPATH=`cat $CONF_FILE | grep ^$TOMCATVERSION | awk -F':' '{ print $3 }'`;
	fi
}
#进行日常更新
update() {
	if [ -z "`ls -A $PACKAGE_PATH/package/update`" ];then
        	echo -e "\033[31merror\033[0m,Update files don't exist,Please put it in $PACKAGE_PATH/package/update/";
        	exit 4
	else	
		echo -e "\033[34mStart to update $TOMCATPATH/webapps/$ROOTPATH\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	        \cp -a $PACKAGE_PATH/package/update/* $TOMCATPATH/webapps/$ROOTPATH 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
		sleep 3
		echo -e "\033[34m$TOMCATPATH/webapps/$ROOTPATH update successfully\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
		sleep 2
	fi
}
#清理更新文件
updateclean(){
	if [ $MULTI_COUNT -ne 0 ];then
		if [ $I -eq $MULTI_COUNT ];then
			TOMCATVERSION=$MULTI_NAME;
		fi;
	fi
	#备份本次更新文件
	mkdir -p $PACKAGE_PATH/package/backup/$TOMCATVERSION/`date +%Y-%m-%d-%H:%M`/
    mv $PACKAGE_PATH/package/update/* $PACKAGE_PATH/package/backup/$TOMCATVERSION/`date +%Y-%m-%d-%H:%M`/ 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
}
fullupdate(){
	update
	updateclean
}
#配置同时更新多个tomcat
#统一管理平台（tg）
tgupdate(){
#分别定义要部署的系统
	TOMCATVERSION=df
	TOMCAT_GET
		backup
			tctshut
			update
			tctstart		
	TOMCATVERSION=zyjj
	TOMCAT_GET
		backup
			tctshut
			fullupdate
			tctstart
}
#共通版（gt）
gtupdate(){
#分别定义要部署的系统
	TOMCATVERSION=waibao
	TOMCAT_GET
		backup
			tctshut
			update
			tctstart
	TOMCATVERSION=tuoguan
	TOMCAT_GET
		backup
			tctshut
			fullupdate
			tctstart
}
#期货协会报送系统(qxbs)
qxbsupdate(){
#分别定义要部署的系统
	TOMCATVERSION=qhyxh
	TOMCAT_GET
		backup
			tctshut
			update
			tctstart
	TOMCATVERSION=shebao
	TOMCAT_GET
		backup
			tctshut
			fullupdate
			tctstart
}
#redis启停配置
redis_configure(){

REDIS_PATH=`cat $CONF_FILE | grep ^REDIS_PATH | awk -F'=' '{ print $2 }'`
#echo $REDIS_ACTION
case $REDIS_ACTION in
       -st|--startup)

                echo -e "\033[34mStarting redis\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                REDIS_COUNT=`ls $REDIS_PATH/conf | grep conf | wc -l`
                for I in  `seq 1 $REDIS_COUNT`;do
                        REDIS_CONF=`ls -l $REDIS_PATH/conf/ | grep conf | head -$I | tail -1 | cut -d ' ' -f9`
                        $REDIS_PATH/bin/redis-server $REDIS_PATH/conf/$REDIS_CONF
                        echo -e "\033[35mRedis  $REDIS_CONF is started successfully\033[0m" 2>&1|tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
         
       done
                echo -e "\033[34mStarting redis successfully\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log;;

        -sh|--shutdown)

                echo -e "\033[36mStart to shut redis\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                ps -ef | grep redis | grep -v grep | awk '{print $2}' | sed -e "s/^/kill -9 /g" | sh - &> /dev/null
                echo -e "\033[37mRedis is shutted successfully\033[0m" 2>&1|tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log;;

        -r|--restart)

                echo -e "\033[36mStart to shut redis\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                ps -ef | grep redis | grep -v grep | awk '{print $2}' | sed -e "s/^/kill -9 /g" | sh -
                echo -e "\033[37mRedis is shutted successfully\033[0m" 2>&1|tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                echo -e "\033[34mStarting redis\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                REDIS_COUNT=`ls $REDIS_PATH/conf | grep conf | wc -l`
                for I in  `seq 1 $REDIS_COUNT`;do
                        REDIS_CONF=`ls -l $REDIS_PATH/conf/ | grep conf | head -$I | tail -1 | cut -d ' ' -f9`
                        $REDIS_PATH/bin/redis-server $REDIS_PATH/conf/$REDIS_CONF
                         echo -e "\033[35mRedis $REDIS_CONF is started successfully\033[0m" 2>&1|tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                done
                echo -e "\033[34mRestarting redis successfully\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log;;

esac
}
#清理参与进程,日志及备份文件
cleanlog(){
	rm -rf $PACKAGE_PATH/package/update/*
	read -p "Do you want to clean the logs in $TCT_PATH/logs?(y for yes/n for no)" CLOG
	case $CLOG in
        	y)
                	rm -rf $TCT_PATH/logs/*
                	echo "Clean logs successfully";;
        	n)
                	echo "Done nothing";;
	esac
}
cleanbak(){
	read -p "Do you want to clean the backups in $PACKAGE_PATH/package/backup?(y for yes/n for no)" CBAK
	case $CBAK in
        	y)
                	rm -rf $PACKAGE_PATH/package/backup/*
                	echo "Clean backup uccessfully";;
        	n)
                	echo "Done nothing";;
	esac
}
cleancache(){
	read -p "Do you want to clean the cache in Memory?(y for yes/n for no)" CACHE
        case $CACHE in
                y)

                        echo "Start to clean cache"
			sync;sync;sync #写入硬盘，防止数据丢失
			sleep 10 #延迟10秒
			echo 1 > /proc/sys/vm/drop_caches
			echo 2 > /proc/sys/vm/drop_caches
			echo 3 > /proc/sys/vm/drop_caches
			echo "Clean cache uccessfully";;
                n)
                        echo "Done nothing";;
        esac
}
clean(){
	case $CLEAN_OPTION in
	log)
		cleanlog;;
	bak)
		cleanbak;;
	cache)
		cleancache;;
	*)
		cleanlog
		cleanbak
		cleancache
		echo "Clean complete,exiting..."
		sleep 1
		ps -ef | grep tctconfig | grep -v grep | awk '{print $2}' | sed -e "s/^/kill -15 /g" | sh - &>/dev.null;;
	esac
}
#安装部署解压
#部署tomcat,redis,jdk
tctinstall(){
	echo -e "\033[33mStart to install tomcat,the INSTALLPATH is $INSTALLPATH,please waiting\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	#判断目的地址是否存在相同的应用
       	if [ -e $INSTALLPATH/tomcat8 ];then
		read -p "There is a tomcat8 in $INSTALLPATH,dou you want to remove it?(y/n)" TCTOPTION 
		case $TCTOPTION in
			y)
				#cd $INSTALLPATH
				mkdir -p $PACKAGE_PATH/package/backup/$INSTALLOPTION/`date +%Y-%m-%d-%H:%M`/
				mv $INSTALLPATH/tomcat8 $PACKAGE_PATH/package/backup/$INSTALLOPTION-`date +%Y-%m-%d-%H:%M`/
				echo "The old $INSTALLOPTION have been moved to $PACKAGE_PATH/package/backup/$INSTALLOPTION-`date +%Y-%m-%d-%H:%M`/" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
				echo "start to install a new $INSTALLOPTION,please waiting..." 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log;;
			n)
				echo "You choosed no,we have done noting,exiting" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log

				exit 1;;
		esac
	fi
	cd $PACKAGE_PATH/package/install/
	unzip -d $INSTALLPATH `ls $PACKAGE_PATH/package/install/ | grep ^-i tomcat` >> $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	echo -e "\033[34mTomcat installed successfully!!!\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
}
redisinstall(){
	#判断目的地址是否存在相同的应用
        if [ -e $INSTALLPATH/redis ];then
                read -p "There is a redis in $INSTALLPATH,dou you want to remove it?(y/n)" TCTOPTION
                case $TCTOPTION in
                        y)
                                #cd $INSTALLPATH
                                mkdir -p $PACKAGE_PATH/package/backup/$INSTALLOPTION/`date +%Y-%m-%d-%H:%M`/
                                mv $INSTALLPATH/redis $PACKAGE_PATH/package/backup/$INSTALLOPTION-`date +%Y-%m-%d-%H:%M`/
                                echo "The old $INSTALLOPTION have been moved to $PACKAGE_PATH/package/backup/$INSTALLOPTION-`date +%Y-%m-%d-%H:%M`/" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                                echo "start to install a new $INSTALLOPTION,please waiting..." 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log;;
                        n)
                                echo "You choosed no,we have done noting,exiting" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log

                                exit 2;;
                esac
        fi
	cd $PACKAGE_PATH/package/install/
	echo -e "\033[33mStart to install redis,the INSTALLPATH is $INSTALLPATH,please waiting\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
 	#\cp -a ./package/install/redis.zip $INSTALLPATH
       	unzip -d $INSTALLPATH `ls $PACKAGE_PATH/package/install/ | grep ^-i redis` >> $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
       	#$INSTALLPATH/redis/bin/redis-server  $INSTALLPATH/redis/conf/6379.conf
	echo -e "\033[34mRedis installed successfully!!!\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
}
jdkinstall(){
	#判断目的地址是否存在相同的应用
        if [ -e $INSTALLPATH/jdk1.8.0_131 ];then
                read -p "There is a jdk1.8.0_131 in $INSTALLPATH,dou you want to remove it?(y/n)" TCTOPTION
                case $TCTOPTION in
                        y)
                                #cd $INSTALLPATH
                                mkdir -p $PACKAGE_PATH/package/backup/$INSTALLOPTION-`date +%Y-%m-%d-%H:%M`/
                                mv $INSTALLPATH/jdk1.8.0_131 $PACKAGE_PATH/package/backup/$INSTALLOPTION-`date +%Y-%m-%d-%H:%M`/
                                echo "The old $INSTALLOPTION have been moved to $PACKAGE_PATH/package/backup/$INSTALLOPTION-`date +%Y-%m-%d-%H:%M`/" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                                echo "start to install a new $INSTALLOPTION,please waiting..." 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log;;
                        n)
                                echo "You choosed no,we have done noting,exiting" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
                                exit 3;;
                esac
        fi
	cd $PACKAGE_PATH/package/install/
	echo -e "\033[33mStart to install jdk,the INSTALLPATH is $INSTALLPATH,please waiting\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	#\cp -a ./package/install/jdk1.8.0_131.zip $INSTALLPATH
       	unzip -d $INSTALLPATH `ls $PACKAGE_PATH/package/install/ | grep ^-i jdk` >> $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
	echo -e "\033[34mJDK installed successfully!!!\033[0m" 2>&1| tee -a $TCT_PATH/logs/tctconfig-`date +%Y-%m-%d`.log
}
		#cat "export JAVA_HOME=$INSTALLPATH/jdk1.8.0_131" >> $INSTALLPATH/tomcat8/bin/catalina.out
        	#cat "export JRE_HOME=$INSTALLPATH/jdk1.8.0_131/jre" >> $INSTALLPATH/tomcat8/bin/catalina.out
        	#cat ""JAVA_OPTS="-Xms2048m -Xmx2048m -XX:PermSize=512M -XX:MaxNewSize=1024m -XX:MaxPermSize=512m  -Djava.awt.headless=true  -noverify -Dfastjson.parser.safeMode=true" >> $INSTALLPATH/tomcat8/bin/catalina.out
install(){
case $INSTALLOPTION in
	tomcat)
		tctinstall;;
	redis)
		redisinstall;;
	jdk)
		jdkinstall;;
	full)
		INSTALLOPTION=tomcat
		tctinstall
		INSTALLOPTION=redis
		redisinstall
		INSTALLOPTION=jdk
		jdkinstall;;
esac
}
TOMCAT_CONFIGURE(){
		
	case $CONFIGURATION in
	
		b)
			backup;;
        	tb)
                	testbackup;;
        	r)
                	tctrestart;;
        	u)
                	if [ -z "`ls -A $PACKAGE_PATH/package/update`" ];then
                        echo -e "\033[31merror\033[0m,Update files don't exist,Please put it in $PACKAGE_PATH/package/update/";
                        exit 4;
					fi
					#根据MULTI_COUNT是否等于0，判断如何进行更新
					if [ $MULTI_COUNT -ne 0 ];then
						if	[ "$I -lt $MULTI_COUNT" ];then
							backup;
							tctshut;
					    	update;
							tctstart;
						else
							backup;
					        tctshut;
							fullupdate;
							tctstart;
						fi;
					else
        				backup;
						tctshut;
						fullupdate;
						tctstart;
					fi;;
			tu)
                	if [ -z "`ls -A $PACKAGE_PATH/package/update`" ];then
                                echo -e "\033[31merror\033[0m,Update files don't exist,Please put it in $PACKAGE_PATH/package/update/";
                        	exit 5;
			else
                                tctshut;
				fullupdate;
				tctstart;
                        fi;;
		l)	
	                tail -"$COUNT"f $TOMCATPATH/logs/catalina.out;;
        	sh)
			tctshut;;
		st)
			tctstart;;
		*)
			echo "Usage:tctconf.sh [-b|--backup|-tb|--testbackup|-r|--restart|-u|--update|-tu|--testupdate|-sh|--shutdown|-st|--startup|-l|--log|-i|--install|-c|--clean|-h|--help] [TOMCATVERSION]"
                exit 6;;		
	esac
	mv $TCT_PATH/tee $TCT_PATH/logs/ &> /dev/null
        mv $TOMCATPATH/webapps/tee $TCT_PATH/logs/ &> /dev/null

}

case $CONFIGURATION in
	tg)
		if [ -z "`ls -A $PACKAGE_PATH/package/update`" ];then
	                echo -e "\033[31merror\033[0m,Update files don't exist,Please put it in $PACKAGE_PATH/package/update/";
        	        exit 5;
                else
                	tgupdate;
                fi;;
	gt)
		if [ -z "`ls -A $PACKAGE_PATH/package/update`" ];then
                        echo -e "\033[31merror\033[0m,Update files don't exist,Please put it in $PACKAGE_PATH/package/update/";
                        exit 5;
                else
                        gtupdate;
                fi;;
	qxbs)
		qxbsupdate;;
	c)
		clean;;
        i)
                install;;
        rd)
                redis_configure;;
	*)
		if [ $CONFIG_MODE == PRO ];then
	 		if [ $PROGRAM_MODE == single ];then
                		TOMCATVERSION=`cat $CONF_FILE | grep ^SINGLE_PATH | awk -F':' '{ print $2 }'`;
                		TOMCATPATH=`cat $CONF_FILE | grep ^SINGLE_PATH | awk -F':' '{ print $3 }'`;
                		ROOTPATH=`cat $CONF_FILE | grep ^SINGLE_PATH | awk -F':' '{ print $4 }'`;

        		else
				TOMCATVERSION=$2;
                        	TOMCAT_GET;
        		fi;
			TOMCAT_CONFIGURE;
		else
			if [ $PROGRAM_MODE == single ];then
                		TOMCATVERSION=`cat $CONF_FILE | grep ^SINGLE_PATH | awk -F':' '{ print $2 }'`;
                		TOMCATPATH=`cat $CONF_FILE | grep ^SINGLE_PATH | awk -F':' '{ print $3 }'`;
                		ROOTPATH=`cat $CONF_FILE | grep ^SINGLE_PATH | awk -F':' '{ print $4 }'`;
			else
				TOMCAT_GET;
			fi;
			TOMCAT_CONFIGURE;
		fi;;
esac
